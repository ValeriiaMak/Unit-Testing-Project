{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-16T15:45:52.796Z",
    "end": "2021-11-16T15:45:52.814Z",
    "duration": 18,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6fd9cc2a-db86-4b1c-b01e-9fb26448c9ce",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
          "title": "add positive scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add positive scenarios\"",
              "fullTitle": "add positive scenarios \"before each\" hook in \"add positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "eaa1e216-e3ef-4bc1-a4f9-2a9150dbc991",
              "parentUUID": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add positive scenarios\"",
              "fullTitle": "add positive scenarios \"after each\" hook in \"add positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "54da50fe-00b4-47a9-827f-f5b05c751f77",
              "parentUUID": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return sum of integers",
              "fullTitle": "add positive scenarios should return sum of integers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1, 2, 3, 4)).to.be.equal(10);",
              "err": {},
              "uuid": "eed1b9f4-aecf-41a5-9c6f-f8be6cd1a93d",
              "parentUUID": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of tree-digit numbers",
              "fullTitle": "add positive scenarios should return sum of tree-digit numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(100, 200, 564)).to.be.equal(864);",
              "err": {},
              "uuid": "b0cf62ac-ea05-416f-b370-1cef9b678a36",
              "parentUUID": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of non integers",
              "fullTitle": "add positive scenarios should return sum of non integers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1.5, 2)).to.be.equal(3.5);",
              "err": {},
              "uuid": "a6d8fce2-369d-4848-a7a7-a753b95b3bc3",
              "parentUUID": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of negative numbers",
              "fullTitle": "add positive scenarios should return sum of negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(-2000, -3000)).to.be.equal(-5000);",
              "err": {},
              "uuid": "6108c349-4cf3-4064-9a75-7d099e1fcf45",
              "parentUUID": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of mixed numbers",
              "fullTitle": "add positive scenarios should return sum of mixed numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1.5, 2345678, -765, 0)).to.be.equal(2344914.5);",
              "err": {},
              "uuid": "48797ea2-1d33-4def-ac68-4585d3f51e3f",
              "parentUUID": "3f21a22e-00a3-4dda-abbd-dee5d0d8e92a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eed1b9f4-aecf-41a5-9c6f-f8be6cd1a93d",
            "b0cf62ac-ea05-416f-b370-1cef9b678a36",
            "a6d8fce2-369d-4848-a7a7-a753b95b3bc3",
            "6108c349-4cf3-4064-9a75-7d099e1fcf45",
            "48797ea2-1d33-4def-ac68-4585d3f51e3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81bfbf56-5b74-4af9-8c3b-403c4e1a5902",
          "title": "add negative scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add negative scenarios\"",
              "fullTitle": "add negative scenarios \"before each\" hook in \"add negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "8bccee5b-0dbb-4a7b-ac63-4a9178add592",
              "parentUUID": "81bfbf56-5b74-4af9-8c3b-403c4e1a5902",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add negative scenarios\"",
              "fullTitle": "add negative scenarios \"after each\" hook in \"add negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "0d18ed87-4122-4b29-96b4-53074966bb8a",
              "parentUUID": "81bfbf56-5b74-4af9-8c3b-403c4e1a5902",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should throw an error if there is a letter",
              "fullTitle": "add negative scenarios should throw an error if there is a letter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add('a', 2)).to.throw(`[a,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "5f02d342-133a-4568-b5a9-6877ab279ad0",
              "parentUUID": "81bfbf56-5b74-4af9-8c3b-403c4e1a5902",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is an empty value",
              "fullTitle": "add negative scenarios should throw an error if there is an empty value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add(' ', 2)).to.throw(`[ ,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "aadf0cd7-4347-45eb-8f37-f82a87e8f265",
              "parentUUID": "81bfbf56-5b74-4af9-8c3b-403c4e1a5902",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is a spesial simbols",
              "fullTitle": "add negative scenarios should throw an error if there is a spesial simbols",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add('_', 2)).to.throw(`[_,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "2a6bcd9a-ab30-4430-985c-cfa8906d6da1",
              "parentUUID": "81bfbf56-5b74-4af9-8c3b-403c4e1a5902",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f02d342-133a-4568-b5a9-6877ab279ad0",
            "aadf0cd7-4347-45eb-8f37-f82a87e8f265",
            "2a6bcd9a-ab30-4430-985c-cfa8906d6da1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e413ca69-c89d-43fe-a395-5dd1b7617342",
          "title": "multiply positive scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiply positive scenarios\"",
              "fullTitle": "multiply positive scenarios \"before each\" hook in \"multiply positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "934fea82-9c8a-4723-9df1-dfa4723628b8",
              "parentUUID": "e413ca69-c89d-43fe-a395-5dd1b7617342",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiply positive scenarios\"",
              "fullTitle": "multiply positive scenarios \"after each\" hook in \"multiply positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "33160c98-9497-4abd-9d43-42b13e0d5486",
              "parentUUID": "e413ca69-c89d-43fe-a395-5dd1b7617342",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return multiply of integers",
              "fullTitle": "multiply positive scenarios should return multiply of integers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1, 2, 3, 4)).to.be.equal(24);",
              "err": {},
              "uuid": "769d5022-20eb-4e39-ac21-712aa4dd9b70",
              "parentUUID": "e413ca69-c89d-43fe-a395-5dd1b7617342",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of tree-digit numbers",
              "fullTitle": "multiply positive scenarios should return multiply of tree-digit numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(100, 200, 564)).to.be.equal(11280000);",
              "err": {},
              "uuid": "e1765e59-730c-4072-8a34-00b9b317f254",
              "parentUUID": "e413ca69-c89d-43fe-a395-5dd1b7617342",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of non integers",
              "fullTitle": "multiply positive scenarios should return multiply of non integers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1.5, 2)).to.be.equal(3);",
              "err": {},
              "uuid": "47b95ace-a703-41b4-a1f3-3adecf9547a0",
              "parentUUID": "e413ca69-c89d-43fe-a395-5dd1b7617342",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of negative numbers",
              "fullTitle": "multiply positive scenarios should return multiply of negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(-2000, -3000)).to.be.equal(6000000);",
              "err": {},
              "uuid": "a8d1c8e0-d75f-4cfa-af7a-65642aba1183",
              "parentUUID": "e413ca69-c89d-43fe-a395-5dd1b7617342",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of mixed numbers",
              "fullTitle": "multiply positive scenarios should return multiply of mixed numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1.5, 2345678, -765, 3)).to.be.equal(-8074996515);",
              "err": {},
              "uuid": "0aa5d49c-4323-42dd-af2b-261fe1d7af6e",
              "parentUUID": "e413ca69-c89d-43fe-a395-5dd1b7617342",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "769d5022-20eb-4e39-ac21-712aa4dd9b70",
            "e1765e59-730c-4072-8a34-00b9b317f254",
            "47b95ace-a703-41b4-a1f3-3adecf9547a0",
            "a8d1c8e0-d75f-4cfa-af7a-65642aba1183",
            "0aa5d49c-4323-42dd-af2b-261fe1d7af6e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "98fc5760-aeef-4018-a395-013553ba0c3e",
          "title": "multiply negative scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiply negative scenarios\"",
              "fullTitle": "multiply negative scenarios \"before each\" hook in \"multiply negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "e6a43665-0224-4b7d-a500-243d521e3a49",
              "parentUUID": "98fc5760-aeef-4018-a395-013553ba0c3e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiply negative scenarios\"",
              "fullTitle": "multiply negative scenarios \"after each\" hook in \"multiply negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "6281debf-50d8-4196-8d98-54702e459bc9",
              "parentUUID": "98fc5760-aeef-4018-a395-013553ba0c3e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should throw an error if there is a letter",
              "fullTitle": "multiply negative scenarios should throw an error if there is a letter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply('a', 2)).to.throw(`[a,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "27880599-93c8-4f97-9cbc-67ac1f9f4b18",
              "parentUUID": "98fc5760-aeef-4018-a395-013553ba0c3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is an empty value",
              "fullTitle": "multiply negative scenarios should throw an error if there is an empty value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply(' ', 2)).to.throw(`[ ,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "26b86f48-bb39-469a-ba0c-711cf8641424",
              "parentUUID": "98fc5760-aeef-4018-a395-013553ba0c3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is a spesial simbols",
              "fullTitle": "multiply negative scenarios should throw an error if there is a spesial simbols",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply('_', 2)).to.throw(`[_,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "8f58dab5-289d-4da8-8641-127b50110680",
              "parentUUID": "98fc5760-aeef-4018-a395-013553ba0c3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27880599-93c8-4f97-9cbc-67ac1f9f4b18",
            "26b86f48-bb39-469a-ba0c-711cf8641424",
            "8f58dab5-289d-4da8-8641-127b50110680"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}