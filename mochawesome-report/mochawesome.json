{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-16T15:51:44.691Z",
    "end": "2021-11-16T15:51:44.712Z",
    "duration": 21,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f200c407-5213-47fd-8889-d6a4337809da",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cc046cbf-7224-450b-a016-70e04edae207",
          "title": "add positive scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add positive scenarios\"",
              "fullTitle": "add positive scenarios \"before each\" hook in \"add positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "8ba63d57-f4ea-4c4f-9f72-b72d6c893579",
              "parentUUID": "cc046cbf-7224-450b-a016-70e04edae207",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add positive scenarios\"",
              "fullTitle": "add positive scenarios \"after each\" hook in \"add positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "ae533ea7-24df-4218-ae57-9655a11885cb",
              "parentUUID": "cc046cbf-7224-450b-a016-70e04edae207",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return sum of integers",
              "fullTitle": "add positive scenarios should return sum of integers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1, 2, 3, 4)).to.be.equal(10);",
              "err": {},
              "uuid": "31e48aa0-3f7c-4ef8-be14-ca1902d0fe04",
              "parentUUID": "cc046cbf-7224-450b-a016-70e04edae207",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of tree-digit numbers",
              "fullTitle": "add positive scenarios should return sum of tree-digit numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(100, 200, 564)).to.be.equal(864);",
              "err": {},
              "uuid": "5de3fc97-ec3d-422c-8548-04c5aab78fed",
              "parentUUID": "cc046cbf-7224-450b-a016-70e04edae207",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of non integers",
              "fullTitle": "add positive scenarios should return sum of non integers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1.5, 2)).to.be.equal(3.5);",
              "err": {},
              "uuid": "7f27ddcb-ca2b-494d-8aa4-2b3f3c225dbf",
              "parentUUID": "cc046cbf-7224-450b-a016-70e04edae207",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of negative numbers",
              "fullTitle": "add positive scenarios should return sum of negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(-2000, -3000)).to.be.equal(-5000);",
              "err": {},
              "uuid": "e2995858-b038-44f8-9726-163b65093f64",
              "parentUUID": "cc046cbf-7224-450b-a016-70e04edae207",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of mixed numbers",
              "fullTitle": "add positive scenarios should return sum of mixed numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1.5, 2345678, -765, 0)).to.be.equal(2344914.5);",
              "err": {},
              "uuid": "015689a0-d196-460c-92ab-bc2f841ed210",
              "parentUUID": "cc046cbf-7224-450b-a016-70e04edae207",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31e48aa0-3f7c-4ef8-be14-ca1902d0fe04",
            "5de3fc97-ec3d-422c-8548-04c5aab78fed",
            "7f27ddcb-ca2b-494d-8aa4-2b3f3c225dbf",
            "e2995858-b038-44f8-9726-163b65093f64",
            "015689a0-d196-460c-92ab-bc2f841ed210"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd376786-c71a-4e84-aa0c-13be4d3acd07",
          "title": "add negative scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add negative scenarios\"",
              "fullTitle": "add negative scenarios \"before each\" hook in \"add negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "90260a97-52f9-4e6f-a072-c10a26307b42",
              "parentUUID": "cd376786-c71a-4e84-aa0c-13be4d3acd07",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add negative scenarios\"",
              "fullTitle": "add negative scenarios \"after each\" hook in \"add negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "21efee74-ad6a-4b79-8a06-2155848603af",
              "parentUUID": "cd376786-c71a-4e84-aa0c-13be4d3acd07",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should throw an error if there is a letter",
              "fullTitle": "add negative scenarios should throw an error if there is a letter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add('a', 2)).to.throw(`[a,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "eef73c92-28cc-49d4-b249-45731c8397a3",
              "parentUUID": "cd376786-c71a-4e84-aa0c-13be4d3acd07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is an empty value",
              "fullTitle": "add negative scenarios should throw an error if there is an empty value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add(' ', 2)).to.throw(`[ ,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "9f294cc0-d1b1-4add-82a7-1a82edc4122d",
              "parentUUID": "cd376786-c71a-4e84-aa0c-13be4d3acd07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is a spesial simbols",
              "fullTitle": "add negative scenarios should throw an error if there is a spesial simbols",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add('_', 2)).to.throw(`[_,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "2ba8707c-d4ae-4e59-8319-5c366a71dab3",
              "parentUUID": "cd376786-c71a-4e84-aa0c-13be4d3acd07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eef73c92-28cc-49d4-b249-45731c8397a3",
            "9f294cc0-d1b1-4add-82a7-1a82edc4122d",
            "2ba8707c-d4ae-4e59-8319-5c366a71dab3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a79717c-20ac-44e0-bafc-f5e505488bda",
          "title": "multiply positive scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiply positive scenarios\"",
              "fullTitle": "multiply positive scenarios \"before each\" hook in \"multiply positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "c99c3e83-713f-4002-a142-2002c9f1d785",
              "parentUUID": "5a79717c-20ac-44e0-bafc-f5e505488bda",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiply positive scenarios\"",
              "fullTitle": "multiply positive scenarios \"after each\" hook in \"multiply positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "19233a05-2086-4b0c-959a-ff0782cd5bef",
              "parentUUID": "5a79717c-20ac-44e0-bafc-f5e505488bda",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return multiply of integers",
              "fullTitle": "multiply positive scenarios should return multiply of integers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1, 2, 3, 4)).to.be.equal(24);",
              "err": {},
              "uuid": "81bc7fe2-a5a8-4303-88c3-538c251d004e",
              "parentUUID": "5a79717c-20ac-44e0-bafc-f5e505488bda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of tree-digit numbers",
              "fullTitle": "multiply positive scenarios should return multiply of tree-digit numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(100, 200, 564)).to.be.equal(11280000);",
              "err": {},
              "uuid": "b5b4d9c2-950f-4055-ade9-a4ba3f5f3dc5",
              "parentUUID": "5a79717c-20ac-44e0-bafc-f5e505488bda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of non integers",
              "fullTitle": "multiply positive scenarios should return multiply of non integers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1.5, 2)).to.be.equal(3);",
              "err": {},
              "uuid": "0095958a-5130-40f8-b18d-bab6a20f6b76",
              "parentUUID": "5a79717c-20ac-44e0-bafc-f5e505488bda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of negative numbers",
              "fullTitle": "multiply positive scenarios should return multiply of negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(-2000, -3000)).to.be.equal(6000000);",
              "err": {},
              "uuid": "0ddd3935-0ac4-4148-847b-41c6726b1af0",
              "parentUUID": "5a79717c-20ac-44e0-bafc-f5e505488bda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of mixed numbers",
              "fullTitle": "multiply positive scenarios should return multiply of mixed numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1.5, 2345678, -765, 3)).to.be.equal(-8074996515);",
              "err": {},
              "uuid": "88a41dec-6e00-4733-be20-dcb3f019edd5",
              "parentUUID": "5a79717c-20ac-44e0-bafc-f5e505488bda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81bc7fe2-a5a8-4303-88c3-538c251d004e",
            "b5b4d9c2-950f-4055-ade9-a4ba3f5f3dc5",
            "0095958a-5130-40f8-b18d-bab6a20f6b76",
            "0ddd3935-0ac4-4148-847b-41c6726b1af0",
            "88a41dec-6e00-4733-be20-dcb3f019edd5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57a381d5-0aab-4910-b308-8f3c245ba867",
          "title": "multiply negative scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiply negative scenarios\"",
              "fullTitle": "multiply negative scenarios \"before each\" hook in \"multiply negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "b364860f-cb0e-403e-ba5e-97697c7e9037",
              "parentUUID": "57a381d5-0aab-4910-b308-8f3c245ba867",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiply negative scenarios\"",
              "fullTitle": "multiply negative scenarios \"after each\" hook in \"multiply negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "f51ed93e-547f-4722-92e9-2a078d48471b",
              "parentUUID": "57a381d5-0aab-4910-b308-8f3c245ba867",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should throw an error if there is a letter",
              "fullTitle": "multiply negative scenarios should throw an error if there is a letter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply('a', 2)).to.throw(`[a,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "5b9d585a-e597-4c70-953c-c1a08f4f7370",
              "parentUUID": "57a381d5-0aab-4910-b308-8f3c245ba867",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is an empty value",
              "fullTitle": "multiply negative scenarios should throw an error if there is an empty value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply(' ', 2)).to.throw(`[ ,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "25c5f2e6-a49f-4885-ab43-c71472c70619",
              "parentUUID": "57a381d5-0aab-4910-b308-8f3c245ba867",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is a spesial simbols",
              "fullTitle": "multiply negative scenarios should throw an error if there is a spesial simbols",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply('_', 2)).to.throw(`[_,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "025fc9e0-8e90-4ce0-a554-320d8fe326cc",
              "parentUUID": "57a381d5-0aab-4910-b308-8f3c245ba867",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b9d585a-e597-4c70-953c-c1a08f4f7370",
            "25c5f2e6-a49f-4885-ab43-c71472c70619",
            "025fc9e0-8e90-4ce0-a554-320d8fe326cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}