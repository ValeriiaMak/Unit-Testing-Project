{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-15T20:20:09.833Z",
    "end": "2021-11-15T20:20:09.867Z",
    "duration": 34,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7839b94-7c0c-4225-8a03-993f6ce68f37",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "757b1750-7a39-4e8a-8699-91f0f40568c3",
          "title": "add positive scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add positive scenarios\"",
              "fullTitle": "add positive scenarios \"before each\" hook in \"add positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "285a0a28-7792-4943-a0b1-f81612d9d73e",
              "parentUUID": "757b1750-7a39-4e8a-8699-91f0f40568c3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add positive scenarios\"",
              "fullTitle": "add positive scenarios \"after each\" hook in \"add positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "814c5046-c793-4d99-ace6-086d5e591532",
              "parentUUID": "757b1750-7a39-4e8a-8699-91f0f40568c3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return sum of integers",
              "fullTitle": "add positive scenarios should return sum of integers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1, 2, 3, 4)).to.be.equal(10);",
              "err": {},
              "uuid": "0028cddd-0cff-46b7-bbc2-17fffd4b9612",
              "parentUUID": "757b1750-7a39-4e8a-8699-91f0f40568c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of tree-digit numbers",
              "fullTitle": "add positive scenarios should return sum of tree-digit numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(100, 200, 564)).to.be.equal(864);",
              "err": {},
              "uuid": "6b02e153-5fdc-435f-a4ef-55f1ee078c24",
              "parentUUID": "757b1750-7a39-4e8a-8699-91f0f40568c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of non integers",
              "fullTitle": "add positive scenarios should return sum of non integers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1.5, 2)).to.be.equal(3.5);",
              "err": {},
              "uuid": "09a41f10-d8f8-496c-9703-735bf3d260f8",
              "parentUUID": "757b1750-7a39-4e8a-8699-91f0f40568c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of negative numbers",
              "fullTitle": "add positive scenarios should return sum of negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(-2000, -3000)).to.be.equal(-5000);",
              "err": {},
              "uuid": "626cdb14-86db-491f-8a30-0aa8de36041b",
              "parentUUID": "757b1750-7a39-4e8a-8699-91f0f40568c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return sum of mixed numbers",
              "fullTitle": "add positive scenarios should return sum of mixed numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.add(1.5, 2345678, -765, 0)).to.be.equal(2344914.5);",
              "err": {},
              "uuid": "4107a7b9-da92-4eb6-ba2e-15dc00ab167f",
              "parentUUID": "757b1750-7a39-4e8a-8699-91f0f40568c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0028cddd-0cff-46b7-bbc2-17fffd4b9612",
            "6b02e153-5fdc-435f-a4ef-55f1ee078c24",
            "09a41f10-d8f8-496c-9703-735bf3d260f8",
            "626cdb14-86db-491f-8a30-0aa8de36041b",
            "4107a7b9-da92-4eb6-ba2e-15dc00ab167f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b21b0044-363f-4732-91bb-ca54ad42c898",
          "title": "add negative scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add negative scenarios\"",
              "fullTitle": "add negative scenarios \"before each\" hook in \"add negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "5c13a110-f625-4407-8c76-f991e75b5ccb",
              "parentUUID": "b21b0044-363f-4732-91bb-ca54ad42c898",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add negative scenarios\"",
              "fullTitle": "add negative scenarios \"after each\" hook in \"add negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "6c709574-8648-44bb-a6b5-9d8d7afd3969",
              "parentUUID": "b21b0044-363f-4732-91bb-ca54ad42c898",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should throw an error if there is a letter",
              "fullTitle": "add negative scenarios should throw an error if there is a letter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add('a', 2)).to.throw(`[a,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "15c58265-7af0-47fe-a77f-e430ba838eb8",
              "parentUUID": "b21b0044-363f-4732-91bb-ca54ad42c898",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is an empty value",
              "fullTitle": "add negative scenarios should throw an error if there is an empty value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add(' ', 2)).to.throw(`[ ,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "49ab7026-1b3d-4b07-9255-38635c940347",
              "parentUUID": "b21b0044-363f-4732-91bb-ca54ad42c898",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is a spesial simbols",
              "fullTitle": "add negative scenarios should throw an error if there is a spesial simbols",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.add('_', 2)).to.throw(`[_,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "5edf8051-b67c-4c5c-9e3b-a868e1e2c9b5",
              "parentUUID": "b21b0044-363f-4732-91bb-ca54ad42c898",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15c58265-7af0-47fe-a77f-e430ba838eb8",
            "49ab7026-1b3d-4b07-9255-38635c940347",
            "5edf8051-b67c-4c5c-9e3b-a868e1e2c9b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
          "title": "multiply positive scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiply positive scenarios\"",
              "fullTitle": "multiply positive scenarios \"before each\" hook in \"multiply positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "b8c3445a-5d46-46db-8b3b-114c80df323a",
              "parentUUID": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiply positive scenarios\"",
              "fullTitle": "multiply positive scenarios \"after each\" hook in \"multiply positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "d00c2acc-4e3e-41de-bb85-b6ed5461c7a6",
              "parentUUID": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return multiply of integers",
              "fullTitle": "multiply positive scenarios should return multiply of integers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1, 2, 3, 4)).to.be.equal(24);",
              "err": {},
              "uuid": "71f8c6c5-0317-4f13-9687-dd6d828958ab",
              "parentUUID": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of tree-digit numbers",
              "fullTitle": "multiply positive scenarios should return multiply of tree-digit numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(100, 200, 564)).to.be.equal(11280000);",
              "err": {},
              "uuid": "0c486957-63db-4262-9c2d-9c1aeb9901c6",
              "parentUUID": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of non integers",
              "fullTitle": "multiply positive scenarios should return multiply of non integers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1.5, 2)).to.be.equal(3);",
              "err": {},
              "uuid": "df1fe028-b181-4cb5-878b-b5bd000653cf",
              "parentUUID": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of negative numbers",
              "fullTitle": "multiply positive scenarios should return multiply of negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(-2000, -3000)).to.be.equal(6000000);",
              "err": {},
              "uuid": "9c2efbaf-aaae-4a82-bfd0-8d07da4f7925",
              "parentUUID": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return multiply of mixed numbers",
              "fullTitle": "multiply positive scenarios should return multiply of mixed numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.multiply(1.5, 2345678, -765, 3)).to.be.equal(-8074996515);",
              "err": {},
              "uuid": "92460750-173b-43ce-8fed-339a3e098d7f",
              "parentUUID": "e8d2c13f-ca94-445e-9c7c-5ec122dbab45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71f8c6c5-0317-4f13-9687-dd6d828958ab",
            "0c486957-63db-4262-9c2d-9c1aeb9901c6",
            "df1fe028-b181-4cb5-878b-b5bd000653cf",
            "9c2efbaf-aaae-4a82-bfd0-8d07da4f7925",
            "92460750-173b-43ce-8fed-339a3e098d7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "466121e3-8fc2-4d9d-b469-72ae401c8a92",
          "title": "multiply negative scenarios",
          "fullFile": "D:\\JS projects\\Unit Testing Project\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiply negative scenarios\"",
              "fullTitle": "multiply negative scenarios \"before each\" hook in \"multiply negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new Calculator();",
              "err": {},
              "uuid": "14ef0b1e-198a-46a3-a4ed-b606ba1e4c42",
              "parentUUID": "466121e3-8fc2-4d9d-b469-72ae401c8a92",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiply negative scenarios\"",
              "fullTitle": "multiply negative scenarios \"after each\" hook in \"multiply negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "39f9eb27-36bb-4b06-8ecc-5775934e79de",
              "parentUUID": "466121e3-8fc2-4d9d-b469-72ae401c8a92",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should throw an error if there is a letter",
              "fullTitle": "multiply negative scenarios should throw an error if there is a letter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply('a', 2)).to.throw(`[a,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "9ed99a8e-7f3e-49fb-8a7e-bf6becd3bf96",
              "parentUUID": "466121e3-8fc2-4d9d-b469-72ae401c8a92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is an empty value",
              "fullTitle": "multiply negative scenarios should throw an error if there is an empty value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply(' ', 2)).to.throw(`[ ,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "1660757f-5649-4cd1-8ccb-51edb9d8e8f0",
              "parentUUID": "466121e3-8fc2-4d9d-b469-72ae401c8a92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if there is a spesial simbols",
              "fullTitle": "multiply negative scenarios should throw an error if there is a spesial simbols",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line max-len\nexpect(() => validator.multiply('_', 2)).to.throw(`[_,2] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "8df765a4-679e-4c20-82c5-7df3678b6ea4",
              "parentUUID": "466121e3-8fc2-4d9d-b469-72ae401c8a92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ed99a8e-7f3e-49fb-8a7e-bf6becd3bf96",
            "1660757f-5649-4cd1-8ccb-51edb9d8e8f0",
            "8df765a4-679e-4c20-82c5-7df3678b6ea4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}